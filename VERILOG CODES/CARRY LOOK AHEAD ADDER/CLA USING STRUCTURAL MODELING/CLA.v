`timescale 1ns / 1ps

// Engineer: KARTHIKEYA SHARMA

module CLA(a,b,cin,s,cout);
	input [3:0] a;
	input [3:0] b;
	input cin;
	output [3:0] s;
	output cout;
	
	wire [3:1] c; //carry and intermediate carry 
	wire [3:0] p; //Carry Propagate
	wire [3:0] g; //Carry Generate
	wire [9:0] y; //Intermediate connections
	wire [3:0] cadd; //carry generated by adder
	
	FA f1 (a[0],b[0],cin,s[0],cadd[0]); 
	and (g[0], a[0], b[0]);
	xor (p[0], a[0], b[0]);
	and (y[0], p[0], cin);
	or (c[1], g[0], y[0]);
	
	FA f2 (a[1],b[1],c[1],s[1],cadd[1]); 
	and (g[1], a[1], b[1]);
	xor (p[1], a[1], b[1]);
	and (y[1], p[1], g[0]);
	and (y[2], p[0], p[1], cin);
	or (c[2], g[1], y[1], y[2]);
	
	FA f3 (a[2],b[2],c[2],s[2],cadd[2]);
	and (g[2], a[2], b[2]);
	xor (p[2], a[2], b[2]);
	and (y[3], p[2], g[1]);
	and (y[4], p[1], p[2], g[0]);
	and (y[5], p[0], p[1], p[2], cin);
	or (c[3], g[2], y[3], y[4], y[5]);
	
	FA f4 (a[3],b[3],c[3],s[3],cadd[3]);
	and (g[3], a[3], b[3]);
	xor (p[3], a[3], b[3]);
	and (y[6], p[3], g[2]);
	and (y[7], g[1], p[2], p[3]);
	and (y[8], g[0], p[1], p[2], p[3]);
	and (y[9], p[0], p[1], p[2], p[3], cin);
	or (cout, g[3], y[6], y[7], y[8], y[9]);
		
endmodule

